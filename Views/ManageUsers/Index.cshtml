
@section styles{


<style rel="stylesheet">
    #example {
        border: solid 1px grey;
        border-radius: 4px;
        padding: 4px;
    }

    .select {
        width: 100%;
    }

    .select2-input {
        border-radius: 4px;
    }
    /* for validation */
    .has-success .select2-selection, .has-success .select2-container,
    .has-success .select2-choice, .has-success .select2-choices {
        border-color: #3c763d;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
    }

        .has-success .select2-selection:focus, .has-success .select2-container:focus,
        .has-success .select2-choice:focus, .has-success .select2-choices:focus {
            border-color: #2b542c;
            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #67b168;
        }

    .has-error .select2-selection, .has-error .select2-container,
    .has-error .select2-choice, .has-error .select2-choices {
        border-color: #a94442;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
    }

        .has-error .select2-selection:focus, .has-error .select2-container:focus,
        .has-error .select2-choice:focus, .has-error .select2-choices:focus {
            border-color: #843534;
            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #ce8483;
        }

    .select2-choices {
        border-radius: 4px;
    }
    /* .has-success .select2-choice {
      border-color: #3c763d;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
      }
      .has-success .select2-choice:focus {
      border-color: #2b542c;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #67b168;
      }
      .has-error .select2-choice {
      border-color: #a94442;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
      }
      .has-error .select2-choice:focus {
      border-color: #843534;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #ce8483;
      }*/
</style>
}


@model BugTracker.Models.ManageUsersModel

@{
    ViewBag.Title = "Index";
}


<div class="row mb-3">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">

                <div class=" row bg-white p-0">
                    <div class="col  p-0">
                        <h5 class="page-title ml-3">
                            <span class="page-title-icon mr-1">
                                <i class="fas fa-user-plus"></i>
                            </span> Role Assignment
                        </h5>
                    </div>
                    <div class="p-0 text-right mr-2">
                        <ul class="breadcrumb bg-white float-right m-0 pl-0 pr-0">
                            <li class="">@Html.ActionLink("Dashboard", "Index", "Dashboard")</li>
                            <li class=" active">Role Assignment</li>
                        </ul>
                    </div>

                </div>


            </div>
        </div>
    </div>
</div>




<div class="row">


    <div class="col-lg-5">
        <div class="card m-b-20">
            <div class="card-body">


                <h4 class="mt-0 header-title m-b-30">Assign role</h4>


                <form id="assignForm">

                    <div class="form-group">


                        <label class="control-label">Select user</label>
                        <select id="usersDropDown" required></select>


                    </div>

                    <label class="control-label">Select role</label>
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.Roles, "Id", "Name"), "Roles", new { @class = "form-control", id = "rolesDropDown", required = "required" })

                    </div>




                    <div>
                        <button id="btn-submit" type="submit" class="btn btn-primary waves-effect waves-light">
                            Submit
                        </button>

                    </div>

                </form>



            </div>
        </div>
    </div>
    <div class="col-lg-7">
        <div class="card m-b-20">
            <div class="card-body">

                <h4 class="mt-0 header-title m-b-30">Users List</h4>


                <table id="usersTable" class="table table-hover" style="border-collapse: collapse; border-spacing: 0; width: 100%;">

                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                        </tr>
                    </thead>


                </table>



            </div>
        </div>
    </div> <!-- end col -->
</div>



@section scripts
{

    <script>
        $(document).ready(function () {


            var usersTable = $("#usersTable").DataTable({
                ajax: {
                    url: "/api/users/GetUsersWithRoles",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "UserName"

                    },
                    {
                        data: "Email"

                    }, {
                        data: "Role",
                        render: function (data, type, user) {
                            return data == null ? "N/A" : data;
                        }

                    }
                ]
            });


            var usersSelect = $('#usersDropDown').select2({
                placeholder: 'Choose',
                ajax: {
                    url: '/api/users/GetUsers',
                    dataType: 'json',
                    data: function (params) {
                        var query = {
                            search: params.term
                        }

                        // Query parameters will be ?search=[search]&type=public
                        return query;

                    },
                    minimumInputLength: 1,

                    processResults: function (data, page) {
                        return {
                            results: $.map(data,
                                function (item) {
                                    return {
                                        text: item.UserName,
                                        name: item.UserName,
                                        id: item.Id
                                    }
                                })
                        };
                    }

                }


            });


            var rolesSelect = $('#rolesDropDown').select2({
                minimumResultsForSearch: -1,
                placeholder: 'Choose'
            });

            var userId = $("#usersDropDown option:selected").val();
            var roleId = $("#rolesDropDown option:selected").val();


            //$("#assignForm").validate({

            //    submitHandler: function() {

            //        $.ajax({
            //                url: "/api/users/AssignRole",
            //                method: "post",
            //                data: { UserId: userId, RoleId: roleId }
            //            })
            //            .done(function() {
            //                //toastr.success("Rentals successfully recorded.");

            //                //$("#customer").typeahead('val', '');
            //                //$("#movie").typeahead('val', '');
            //                //$("#movies").empty();
            //                //vm = { movieIds: [] };
            //                //validator.resetForm();

            //                console.log("success");
            //            })
            //            .fail(function() {
            //                //toastr.error("Something unexpected happened.");
            //                console.log("fail");
            //            });

            //        return false;
            //    }
            //});


            //begin copy
            $('#assignForm').validate(
                {
                    errorPlacement: function (error, element) { },
                    highlight: function (element) {
                        $(element)
                            .closest('.form-group')
                            .removeClass('has-success')
                            .addClass('has-error');
                    },
                    unhighlight: function (element) {
                        $(element)
                            .closest('.form-group')
                            .removeClass('has-error')
                            .addClass('has-success');
                    }
                }
            );

            $('select').on('change', function() {  // when the value changes
                $(this).valid(); // trigger validation on this element
            });
            //end copy


        });
    </script>



}

